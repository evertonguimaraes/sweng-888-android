package edu.psu.sweng888.lessonfour_data.database;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.util.ArrayList;
import java.util.List;

import edu.psu.sweng888.lessonfour_data.model.Movie;

  public class MovieDatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "movies_database";
    private static final int DATABASE_VERSION = 1;
    private static final String TABLE_MOVIES = "movies";
    private static final String KEY_ID = "id";
    private static final String KEY_TITLE = "title";
    private static final String KEY_CATEGORY = "category";
    private static final String KEY_YEAR = "year";
    private static final String KEY_RATING = "rating";
    private static final String KEY_DESCRIPTION = "description";

    public MovieDatabaseHelper(Context context){
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(createMoviesTable());
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        if (oldVersion < 2){
            /** Update the database to version 2.
             *  You may need to create new colums or add new tables to the database.
             */
        }
    }

    /** Query to Create the Database*/
    private String createMoviesTable(){
        String QUERY_CREATE_MOVIES_TABLE = "CREATE TABLE " + TABLE_MOVIES + "(" +
                KEY_ID + " INTEGER PRIMARY KEY, "+
                KEY_TITLE + " TEXT," +
                KEY_CATEGORY + " TEXT," +
                KEY_YEAR + " INTEGER," +
                KEY_RATING + " REAL," +
                KEY_DESCRIPTION + " TEXT" +
                ")";
        return QUERY_CREATE_MOVIES_TABLE;
    }

    /** Other queries */
    public void addMovie(Movie movie){
        /** Get a Writable instance of the database */
        SQLiteDatabase database = this.getWritableDatabase();
        /** Create a ContentValues to persist information on the database */
        ContentValues values = new ContentValues();
        /** Populate the object with the values from the Movie to be added.
         *  There is no need to include the ID because it is autogenerated by the SQLIte*/
        values.put(KEY_TITLE, movie.getTitle());
        values.put(KEY_CATEGORY, movie.getCategory());
        values.put(KEY_YEAR, movie.getYear());
        values.put(KEY_RATING, movie.getRating());
        values.put(KEY_DESCRIPTION, movie.getDescription());
        /** Insert the values on the TABLE_MOVIES */
        database.insert(TABLE_MOVIES, null, values);
        /** Close the connection with the database */
        database.close();
    }

    public List<Movie> getMoviesByCategory (String category){
        List<Movie> movieList = new ArrayList<>();
        String selectQuery = "SELECT * FROM " + TABLE_MOVIES + " WHERE " + KEY_CATEGORY + " = ?";
        SQLiteDatabase database = this.getWritableDatabase();
        Cursor cursor = database.rawQuery(selectQuery, new String[]{category});

        if (cursor.moveToFirst()){
            do {
                Movie movie = new Movie(
                        cursor.getString(1), // TITLE
                        cursor.getString(2), // CATEGORY
                        cursor.getInt(3), // YEAR
                        cursor.getFloat(4), // RATING
                        cursor.getString(5) // DESCRIPTION
                );
                movieList.add(movie);
            } while (cursor.moveToNext());
        }

        cursor.close();
        database.close();
        return  movieList;
    }

    public List<Movie> getAllMovies(){
        List<Movie> movieList = new ArrayList<>();
        String selectQuery = "SELECT * FROM "+TABLE_MOVIES;
        SQLiteDatabase database = this.getWritableDatabase();
        Cursor cursor = database.rawQuery(selectQuery, null);

        if (cursor.moveToFirst()){
            do {
                Movie movie = new Movie(
                        cursor.getString(1), // TITLE
                        cursor.getString(2), // CATEGORY
                        cursor.getInt(3), // YEAR
                        cursor.getFloat(4), // RATING
                        cursor.getString(5) // DESCRIPTION
                );
                movieList.add(movie);
            } while (cursor.moveToNext());
        }

        cursor.close();
        database.close();
        return movieList;
    }

    public boolean isDatabaseEmpty() {
          boolean isEmpty = true;
          SQLiteDatabase database = getWritableDatabase();
          Cursor cursor = database.rawQuery("SELECT COUNT(*) FROM " + TABLE_MOVIES, null);
          if (cursor != null) {
              cursor.moveToFirst();
              int count = cursor.getInt(0);
              if (count > 0) {
                  isEmpty = false;
              }
              cursor.close();
          }
          return isEmpty;
      }

    public void populateMoviesDatabase(){

        SQLiteDatabase database = getWritableDatabase();

        ContentValues values = new ContentValues();

        values = new ContentValues();
        values.put(KEY_TITLE, "The Avengers");
        values.put(KEY_CATEGORY, "fiction");
        values.put(KEY_YEAR, 2012);
        values.put(KEY_RATING, 4.8);
        values.put(KEY_DESCRIPTION, "MARVEL");
        database.insert(TABLE_MOVIES, null, values);

        values = new ContentValues();
        values.put(KEY_TITLE, "Blade Runner 2049");
        values.put(KEY_CATEGORY, "action");
        values.put(KEY_YEAR, 2017);
        values.put(KEY_RATING, 3.8);
        values.put(KEY_DESCRIPTION, "Warner Bros");
        database.insert(TABLE_MOVIES, null, values);

        values = new ContentValues();
        values.put(KEY_TITLE, "Babylon");
        values.put(KEY_CATEGORY, "comedy");
        values.put(KEY_YEAR, 2022);
        values.put(KEY_RATING, 4.8);
        values.put(KEY_DESCRIPTION, "Paramount");
        database.insert(TABLE_MOVIES, null, values);

        values = new ContentValues();
        values.put(KEY_TITLE, "The Man From Toronto");
        values.put(KEY_CATEGORY, "action");
        values.put(KEY_YEAR, 2022);
        values.put(KEY_RATING, 4.8);
        values.put(KEY_DESCRIPTION, "Netflix");
        database.insert(TABLE_MOVIES, null, values);

        values = new ContentValues();
        values.put(KEY_TITLE, "Game Night");
        values.put(KEY_CATEGORY, "comedy");
        values.put(KEY_YEAR, 2018);
        values.put(KEY_RATING, 4.1);
        values.put(KEY_DESCRIPTION, "Warner Bros");
        database.insert(TABLE_MOVIES, null, values);

        values = new ContentValues();
        values.put(KEY_TITLE, "The Sleep Over");
        values.put(KEY_CATEGORY, "comedy");
        values.put(KEY_YEAR, 2020);
        values.put(KEY_RATING, 3.7);
        values.put(KEY_DESCRIPTION, "Netflix");
        database.insert(TABLE_MOVIES, null, values);

        database.close();
    }
}
